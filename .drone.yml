kind: pipeline
type: docker
name: Node-Editor

globals:
  - &docker_creds
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  - &env
    AUTH0_SECRET: secret
    AUTH0_ISSUER_BASE_URL: url
    AUTH0_CLIENT_ID: client_id
    AUTH0_CLIENT_SECRET: client_secret
    AUTH0_AUDIENCE: https://api.polyglot-edu.com #TO BE CHANGED
    AUTH0_SCOPE: 'openid profile email read:products'
    DEPLOY_URL: polyglot-edu.com #TO BE CHANGED
    BACK_URL: https://polyglot-api.polyglot-edu.com
    TEST_MODE: true
  - &condition
    event:
      - push

steps:
  - name: Build and push image to Docker
    image: plugins/docker
    settings:
      repo: docker.polyglot-edu.com/polyglot-edu/edupalweb
      registry: docker.polyglot-edu.com
      dockerfile: ./Dockerfile
      tags: ['${DRONE_BRANCH}']
      build_args:
        - 'DEPLOY_URL=polyglot-edu.com'
        - 'BACK_URL=https://polyglot-api.polyglot-edu.com'
        - 'TEST_MODE=true'
      <<: *docker_creds
    when:
      <<: *condition

  - name: Deploy Production
    image: pelotech/drone-helm3
    environment:
      CFORIGIN:
        from_secret: cf_origin
      DOCKERCONFIG:
        from_secret: dockerconfigjson
      <<: *env
    settings:
      mode: upgrade
      chart: ./charts
      release: node-editor-${DRONE_BRANCH}
      namespace: node-editor-${DRONE_BRANCH}
      debug: true
      kube_service_account: admin-user
      kube_api_server: 'https://131.114.23.149:6443' #TO BE CHANGED
      kube_token:
        from_secret: kube_token
      values:
        - 'url=polyglot-edu.com' #TO BE CHANGED
        - 'cfOriginKey=$CFORIGIN'
        - 'dockerconfigjson=$DOCKERCONFIG'
        - 'image.repository=docker.polyglot-edu.com/polyglot-edu/edupalweb'
        - 'image.tag=${DRONE_BRANCH}'
        - 'env.authSecret=$AUTH0_SECRET'
        - 'env.authIssuerUrl=$AUTH0_ISSUER_BASE_URL'
        - 'env.authClientId=$AUTH0_CLIENT_ID'
        - 'env.authClientSecret=$AUTH0_CLIENT_SECRET'
        - 'env.authAudience=$AUTH0_AUDIENCE'
        - 'env.authScope=$AUTH0_SCOPE'
        - 'env.backUrl=$BACK_URL'
        - 'env.testMode=$TEST_MODE'
      cleanup_failed_upgrade: true
      force_upgrade: true
      skip_tls_verify: true
      create_namespace: true
      timeout: 600s
      atomic: false
    depends_on:
      - Build and push image to Docker
    when:
      <<: *condition
      branch:
        include:
          - dev
          - main

  - name: Deploy Development
    image: pelotech/drone-helm3
    environment:
      CFORIGIN:
        from_secret: cf_origin
      DOCKERCONFIG:
        from_secret: dockerconfigjson
      <<: *env
    settings:
      mode: upgrade
      chart: ./charts
      release: node-editor-${DRONE_BRANCH}
      namespace: node-editor-${DRONE_BRANCH}
      debug: true
      kube_service_account: admin-user
      kube_api_server: 'https://131.114.23.149:6443' #TO BE CHANGED
      kube_token:
        from_secret: kube_token
      values:
        - 'url=${DRONE_BRANCH}-dashboard.polyglot-edu.com' #TO BE CHANGED
        - 'cfOriginKey=$CFORIGIN'
        - 'dockerconfigjson=$DOCKERCONFIG'
        - 'image.repository=docker.polyglot-edu.com/polyglot-edu/edupalweb'
        - 'image.tag=${DRONE_BRANCH}'
        - 'env.authSecret=$AUTH0_SECRET'
        - 'env.authIssuerUrl=$AUTH0_ISSUER_BASE_URL'
        - 'env.authClientId=$AUTH0_CLIENT_ID'
        - 'env.authClientSecret=$AUTH0_CLIENT_SECRET'
        - 'env.authAudience=$AUTH0_AUDIENCE'
        - 'env.authScope=$AUTH0_SCOPE'
        - 'env.backUrl=$BACK_URL'
        - 'env.testMode=$TEST_MODE'
      cleanup_failed_upgrade: true
      force_upgrade: true
      skip_tls_verify: true
      create_namespace: true
      timeout: 600s
      atomic: false
    depends_on:
      - Build and push image to Docker
    when:
      <<: *condition
      branch:
        exclude:
          - dev
          - main
